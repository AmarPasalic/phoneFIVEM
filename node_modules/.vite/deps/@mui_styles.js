import {
  SheetsRegistry,
  StylesContext,
  StylesProvider,
  createGenerateClassName,
  defaultSheetsManager,
  jssPreset,
  makeStyles,
  mergeClasses,
  propsToClassKey,
  useTheme
} from "./chunk-6VIMCZTD.js";
import "./chunk-SFY75K4L.js";
import "./chunk-MCVXHTO6.js";
import "./chunk-YPSFAEA2.js";
import "./chunk-VGCYFZ67.js";
import "./chunk-Z4VU5YLV.js";
import "./chunk-IH74ZZPB.js";
import {
  ThemeProvider_default
} from "./chunk-POHX54MR.js";
import "./chunk-TQJVSOTW.js";
import {
  chainPropTypes,
  init_esm,
  ponyfillGlobal_default
} from "./chunk-JKQYZFNE.js";
import "./chunk-KTS646LA.js";
import {
  getDisplayName
} from "./chunk-HQQMILWY.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-2Y6G6KJC.js";
import {
  require_prop_types
} from "./chunk-L3VS6IBL.js";
import {
  clsx_default,
  init_clsx
} from "./chunk-N5VKEJWX.js";
import {
  require_jsx_runtime
} from "./chunk-RVP4W45E.js";
import {
  _extends,
  init_extends
} from "./chunk-3X2J5OLI.js";
import {
  require_hoist_non_react_statics_cjs
} from "./chunk-F5QXI2FG.js";
import "./chunk-ANYMBHSF.js";
import {
  require_react
} from "./chunk-AZ4MYHDF.js";
import {
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/index.js
init_esm();

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/createStyles/createStyles.js
function createStyles(styles) {
  return styles;
}

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/getThemeProps/getThemeProps.js
init_extends();
function getThemeProps(params) {
  const {
    theme,
    name,
    props
  } = params;
  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
    return props;
  }
  const output = _extends({}, props);
  const defaultProps = theme.components[name].defaultProps;
  let propName;
  for (propName in defaultProps) {
    if (output[propName] === void 0) {
      output[propName] = defaultProps[propName];
    }
  }
  return output;
}

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/ServerStyleSheets/ServerStyleSheets.js
init_extends();
var React = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var ServerStyleSheets = class {
  constructor(options = {}) {
    this.options = options;
  }
  collect(children) {
    const sheetsManager = /* @__PURE__ */ new Map();
    this.sheetsRegistry = new SheetsRegistry();
    const generateClassName = createGenerateClassName();
    return (0, import_jsx_runtime.jsx)(StylesProvider, _extends({
      sheetsManager,
      serverGenerateClassName: generateClassName,
      sheetsRegistry: this.sheetsRegistry
    }, this.options, {
      children
    }));
  }
  toString() {
    return this.sheetsRegistry ? this.sheetsRegistry.toString() : "";
  }
  getStyleElement(props) {
    return React.createElement("style", _extends({
      id: "jss-server-side",
      key: "jss-server-side",
      dangerouslySetInnerHTML: {
        __html: this.toString()
      }
    }, props));
  }
};

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/styled/styled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React2 = __toESM(require_react());
init_clsx();
var import_prop_types = __toESM(require_prop_types());
init_esm();
var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var _excluded = ["name"];
var _excluded2 = ["children", "className", "clone", "component"];
function omit(input, fields) {
  const output = {};
  Object.keys(input).forEach((prop) => {
    if (fields.indexOf(prop) === -1) {
      output[prop] = input[prop];
    }
  });
  return output;
}
function styled(Component) {
  const componentCreator = (style, options = {}) => {
    const {
      name
    } = options, stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);
    if (Component === void 0) {
      throw new Error(["You are calling styled(Component)(style) with an undefined component.", "You may have forgotten to import it."].join("\n"));
    }
    let classNamePrefix = name;
    if (true) {
      if (!name) {
        const displayName = getDisplayName(Component);
        if (displayName !== void 0) {
          classNamePrefix = displayName;
        }
      }
    }
    const stylesOrCreator = typeof style === "function" ? (theme) => ({
      root: (props) => style(_extends({
        theme
      }, props))
    }) : {
      root: style
    };
    const useStyles = makeStyles(stylesOrCreator, _extends({
      Component,
      name: name || Component.displayName,
      classNamePrefix
    }, stylesOptions));
    let filterProps;
    let propTypes = {};
    if (style.filterProps) {
      filterProps = style.filterProps;
      delete style.filterProps;
    }
    if (style.propTypes) {
      propTypes = style.propTypes;
      delete style.propTypes;
    }
    const StyledComponent = React2.forwardRef(function StyledComponent2(props, ref) {
      const {
        children,
        className: classNameProp,
        clone,
        component: ComponentProp
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded2);
      const classes = useStyles(props);
      const className = clsx_default(classes.root, classNameProp);
      let spread = other;
      if (filterProps) {
        spread = omit(spread, filterProps);
      }
      if (clone) {
        return React2.cloneElement(children, _extends({
          className: clsx_default(children.props.className, className)
        }, spread));
      }
      if (typeof children === "function") {
        return children(_extends({
          className
        }, spread));
      }
      const FinalComponent = ComponentProp || Component;
      return (0, import_jsx_runtime2.jsx)(FinalComponent, _extends({
        ref,
        className
      }, spread, {
        children
      }));
    });
    true ? StyledComponent.propTypes = _extends({
      /**
       * A render function or node.
       */
      children: import_prop_types.default.oneOfType([import_prop_types.default.node, import_prop_types.default.func]),
      /**
       * @ignore
       */
      className: import_prop_types.default.string,
      /**
       * If `true`, the component will recycle it's children HTML element.
       * It's using `React.cloneElement` internally.
       *
       * This prop will be deprecated and removed in v5
       */
      clone: chainPropTypes(import_prop_types.default.bool, (props) => {
        if (props.clone && props.component) {
          return new Error("You can not use the clone and component prop at the same time.");
        }
        return null;
      }),
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types.default.elementType
    }, propTypes) : void 0;
    if (true) {
      StyledComponent.displayName = `Styled(${classNamePrefix})`;
    }
    (0, import_hoist_non_react_statics.default)(StyledComponent, Component);
    return StyledComponent;
  };
  return componentCreator;
}

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/useThemeVariants/useThemeVariants.js
var useThemeVariants = (props, name) => {
  const {
    classes = {}
  } = props;
  const theme = useTheme();
  let variantsClasses = "";
  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {
    const themeVariants = theme.components[name].variants;
    themeVariants.forEach((themeVariant) => {
      let isMatch = true;
      Object.keys(themeVariant.props).forEach((key) => {
        if (props[key] !== themeVariant.props[key]) {
          isMatch = false;
        }
      });
      if (isMatch) {
        variantsClasses = `${variantsClasses}${classes[propsToClassKey(themeVariant.props)]} `;
      }
    });
  }
  return variantsClasses;
};
var useThemeVariants_default = useThemeVariants;

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/withStyles/withStyles.js
init_extends();
init_objectWithoutPropertiesLoose();
var React3 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());
var import_hoist_non_react_statics2 = __toESM(require_hoist_non_react_statics_cjs());
init_esm();
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var _excluded3 = ["defaultTheme", "withTheme", "name"];
var _excluded22 = ["classes"];
var withStyles = (stylesOrCreator, options = {}) => (Component) => {
  const {
    defaultTheme,
    withTheme: withTheme2 = false,
    name
  } = options, stylesOptions = _objectWithoutPropertiesLoose(options, _excluded3);
  if (true) {
    if (Component === void 0) {
      throw new Error(["You are calling withStyles(styles)(Component) with an undefined component.", "You may have forgotten to import it."].join("\n"));
    }
  }
  let classNamePrefix = name;
  if (true) {
    if (!name) {
      const displayName = getDisplayName(Component);
      if (displayName !== void 0) {
        classNamePrefix = displayName;
      }
    }
  }
  const useStyles = makeStyles(stylesOrCreator, _extends({
    defaultTheme,
    Component,
    name: name || Component.displayName,
    classNamePrefix
  }, stylesOptions));
  const WithStyles = React3.forwardRef(function WithStyles2(props, ref) {
    const other = _objectWithoutPropertiesLoose(props, _excluded22);
    const classes = useStyles(_extends({}, Component.defaultProps, props));
    let theme;
    let more = other;
    if (typeof name === "string" || withTheme2) {
      theme = useTheme() || defaultTheme;
      if (name) {
        more = getThemeProps({
          theme,
          name,
          props: other
        });
      }
      if (withTheme2 && !more.theme) {
        more.theme = theme;
      }
    }
    return (0, import_jsx_runtime3.jsx)(Component, _extends({
      ref,
      classes
    }, more));
  });
  true ? WithStyles.propTypes = {
    /**
     * Override or extend the styles applied to the component.
     */
    classes: import_prop_types2.default.object
  } : void 0;
  if (true) {
    WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;
  }
  (0, import_hoist_non_react_statics2.default)(WithStyles, Component);
  if (true) {
    WithStyles.Naked = Component;
    WithStyles.options = options;
    WithStyles.useStyles = useStyles;
  }
  return WithStyles;
};
var withStyles_default = withStyles;

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/withTheme/withTheme.js
init_extends();
var React4 = __toESM(require_react());
var import_hoist_non_react_statics3 = __toESM(require_hoist_non_react_statics_cjs());
init_esm();
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
function withThemeCreator(options = {}) {
  const {
    defaultTheme
  } = options;
  const withTheme2 = (Component) => {
    if (true) {
      if (Component === void 0) {
        throw new Error(["You are calling withTheme(Component) with an undefined component.", "You may have forgotten to import it."].join("\n"));
      }
    }
    const WithTheme = React4.forwardRef(function WithTheme2(props, ref) {
      const theme = useTheme() || defaultTheme;
      return (0, import_jsx_runtime4.jsx)(Component, _extends({
        theme,
        ref
      }, props));
    });
    if (true) {
      WithTheme.displayName = `WithTheme(${getDisplayName(Component)})`;
    }
    (0, import_hoist_non_react_statics3.default)(WithTheme, Component);
    if (true) {
      WithTheme.Naked = Component;
    }
    return WithTheme;
  };
  return withTheme2;
}
var withTheme = withThemeCreator();
var withTheme_default = withTheme;

// node_modules/.pnpm/@mui+styles@5.17.1_@types+react@18.3.23_react@17.0.2/node_modules/@mui/styles/index.js
if (typeof window !== "undefined") {
  ponyfillGlobal_default["__@mui/styles-init__"] = ponyfillGlobal_default["__@mui/styles-init__"] || 0;
  if (ponyfillGlobal_default["__@mui/styles-init__"] === 1) {
    console.warn(["It looks like there are several instances of `@mui/styles` initialized in this application.", "This may cause theme propagation issues, broken class names, specificity issues, and makes your application bigger without a good reason.", "", "See https://mui.com/r/styles-instance-warning for more info."].join("\n"));
  }
  ponyfillGlobal_default["__@mui/styles-init__"] += 1;
}
export {
  ServerStyleSheets,
  StylesContext,
  StylesProvider,
  ThemeProvider_default as ThemeProvider,
  createGenerateClassName,
  createStyles,
  getThemeProps,
  jssPreset,
  makeStyles,
  mergeClasses,
  propsToClassKey,
  defaultSheetsManager as sheetsManager,
  styled,
  useTheme,
  useThemeVariants_default as useThemeVariants,
  withStyles_default as withStyles,
  withTheme_default as withTheme,
  withThemeCreator
};
/*! Bundled license information:

@mui/styles/index.js:
  (**
   * @mui/styles v5.17.1
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=@mui_styles.js.map
